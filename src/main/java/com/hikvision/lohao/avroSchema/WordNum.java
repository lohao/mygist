///**
// * Autogenerated by Avro
// *
// * DO NOT EDIT DIRECTLY
// */
//package com.hikvision.lohao.avroSchema;
//
//import org.apache.avro.specific.SpecificData;
//import org.apache.avro.message.BinaryMessageEncoder;
//import org.apache.avro.message.BinaryMessageDecoder;
//import org.apache.avro.message.SchemaStore;
//
//@SuppressWarnings("all")
//@org.apache.avro.specific.AvroGenerated
//public class WordNum extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
//  private static final long serialVersionUID = 7632587155669236032L;
//  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WordNum\",\"namespace\":\"com.hikvision.lohao.avroSchema\",\"fields\":[{\"name\":\"word\",\"type\":\"string\"},{\"name\":\"num\",\"type\":\"int\"}]}");
//  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
//
//  private static SpecificData MODEL$ = new SpecificData();
//
//  private static final BinaryMessageEncoder<WordNum> ENCODER =
//      new BinaryMessageEncoder<WordNum>(MODEL$, SCHEMA$);
//
//  private static final BinaryMessageDecoder<WordNum> DECODER =
//      new BinaryMessageDecoder<WordNum>(MODEL$, SCHEMA$);
//
//  /**
//   * Return the BinaryMessageDecoder instance used by this class.
//   */
//  public static BinaryMessageDecoder<WordNum> getDecoder() {
//    return DECODER;
//  }
//
//  /**
//   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
//   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
//   */
//  public static BinaryMessageDecoder<WordNum> createDecoder(SchemaStore resolver) {
//    return new BinaryMessageDecoder<WordNum>(MODEL$, SCHEMA$, resolver);
//  }
//
//  /** Serializes this WordNum to a ByteBuffer. */
//  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
//    return ENCODER.encode(this);
//  }
//
//  /** Deserializes a WordNum from a ByteBuffer. */
//  public static WordNum fromByteBuffer(
//      java.nio.ByteBuffer b) throws java.io.IOException {
//    return DECODER.decode(b);
//  }
//
//  @Deprecated public java.lang.CharSequence word;
//  @Deprecated public int num;
//
//  /**
//   * Default constructor.  Note that this does not initialize fields
//   * to their default values from the schema.  If that is desired then
//   * one should use <code>newBuilder()</code>.
//   */
//  public WordNum() {}
//
//  /**
//   * All-args constructor.
//   * @param word The new value for word
//   * @param num The new value for num
//   */
//  public WordNum(java.lang.CharSequence word, java.lang.Integer num) {
//    this.word = word;
//    this.num = num;
//  }
//
//  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
//  // Used by DatumWriter.  Applications should not call.
//  public java.lang.Object get(int field$) {
//    switch (field$) {
//    case 0: return word;
//    case 1: return num;
//    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
//    }
//  }
//
//  // Used by DatumReader.  Applications should not call.
//  @SuppressWarnings(value="unchecked")
//  public void put(int field$, java.lang.Object value$) {
//    switch (field$) {
//    case 0: word = (java.lang.CharSequence)value$; break;
//    case 1: num = (java.lang.Integer)value$; break;
//    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
//    }
//  }
//
//  /**
//   * Gets the value of the 'word' field.
//   * @return The value of the 'word' field.
//   */
//  public java.lang.CharSequence getWord() {
//    return word;
//  }
//
//  /**
//   * Sets the value of the 'word' field.
//   * @param value the value to set.
//   */
//  public void setWord(java.lang.CharSequence value) {
//    this.word = value;
//  }
//
//  /**
//   * Gets the value of the 'num' field.
//   * @return The value of the 'num' field.
//   */
//  public java.lang.Integer getNum() {
//    return num;
//  }
//
//  /**
//   * Sets the value of the 'num' field.
//   * @param value the value to set.
//   */
//  public void setNum(java.lang.Integer value) {
//    this.num = value;
//  }
//
//  /**
//   * Creates a new WordNum RecordBuilder.
//   * @return A new WordNum RecordBuilder
//   */
//  public static com.hikvision.lohao.avroSchema.WordNum.Builder newBuilder() {
//    return new com.hikvision.lohao.avroSchema.WordNum.Builder();
//  }
//
//  /**
//   * Creates a new WordNum RecordBuilder by copying an existing Builder.
//   * @param other The existing builder to copy.
//   * @return A new WordNum RecordBuilder
//   */
//  public static com.hikvision.lohao.avroSchema.WordNum.Builder newBuilder(com.hikvision.lohao.avroSchema.WordNum.Builder other) {
//    return new com.hikvision.lohao.avroSchema.WordNum.Builder(other);
//  }
//
//  /**
//   * Creates a new WordNum RecordBuilder by copying an existing WordNum instance.
//   * @param other The existing instance to copy.
//   * @return A new WordNum RecordBuilder
//   */
//  public static com.hikvision.lohao.avroSchema.WordNum.Builder newBuilder(com.hikvision.lohao.avroSchema.WordNum other) {
//    return new com.hikvision.lohao.avroSchema.WordNum.Builder(other);
//  }
//
//  /**
//   * RecordBuilder for WordNum instances.
//   */
//  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WordNum>
//    implements org.apache.avro.data.RecordBuilder<WordNum> {
//
//    private java.lang.CharSequence word;
//    private int num;
//
//    /** Creates a new Builder */
//    private Builder() {
//      super(SCHEMA$);
//    }
//
//    /**
//     * Creates a Builder by copying an existing Builder.
//     * @param other The existing Builder to copy.
//     */
//    private Builder(com.hikvision.lohao.avroSchema.WordNum.Builder other) {
//      super(other);
//      if (isValidValue(fields()[0], other.word)) {
//        this.word = data().deepCopy(fields()[0].schema(), other.word);
//        fieldSetFlags()[0] = true;
//      }
//      if (isValidValue(fields()[1], other.num)) {
//        this.num = data().deepCopy(fields()[1].schema(), other.num);
//        fieldSetFlags()[1] = true;
//      }
//    }
//
//    /**
//     * Creates a Builder by copying an existing WordNum instance
//     * @param other The existing instance to copy.
//     */
//    private Builder(com.hikvision.lohao.avroSchema.WordNum other) {
//            super(SCHEMA$);
//      if (isValidValue(fields()[0], other.word)) {
//        this.word = data().deepCopy(fields()[0].schema(), other.word);
//        fieldSetFlags()[0] = true;
//      }
//      if (isValidValue(fields()[1], other.num)) {
//        this.num = data().deepCopy(fields()[1].schema(), other.num);
//        fieldSetFlags()[1] = true;
//      }
//    }
//
//    /**
//      * Gets the value of the 'word' field.
//      * @return The value.
//      */
//    public java.lang.CharSequence getWord() {
//      return word;
//    }
//
//    /**
//      * Sets the value of the 'word' field.
//      * @param value The value of 'word'.
//      * @return This builder.
//      */
//    public com.hikvision.lohao.avroSchema.WordNum.Builder setWord(java.lang.CharSequence value) {
//      validate(fields()[0], value);
//      this.word = value;
//      fieldSetFlags()[0] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'word' field has been set.
//      * @return True if the 'word' field has been set, false otherwise.
//      */
//    public boolean hasWord() {
//      return fieldSetFlags()[0];
//    }
//
//
//    /**
//      * Clears the value of the 'word' field.
//      * @return This builder.
//      */
//    public com.hikvision.lohao.avroSchema.WordNum.Builder clearWord() {
//      word = null;
//      fieldSetFlags()[0] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'num' field.
//      * @return The value.
//      */
//    public java.lang.Integer getNum() {
//      return num;
//    }
//
//    /**
//      * Sets the value of the 'num' field.
//      * @param value The value of 'num'.
//      * @return This builder.
//      */
//    public com.hikvision.lohao.avroSchema.WordNum.Builder setNum(int value) {
//      validate(fields()[1], value);
//      this.num = value;
//      fieldSetFlags()[1] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'num' field has been set.
//      * @return True if the 'num' field has been set, false otherwise.
//      */
//    public boolean hasNum() {
//      return fieldSetFlags()[1];
//    }
//
//
//    /**
//      * Clears the value of the 'num' field.
//      * @return This builder.
//      */
//    public com.hikvision.lohao.avroSchema.WordNum.Builder clearNum() {
//      fieldSetFlags()[1] = false;
//      return this;
//    }
//
//    @Override
//    @SuppressWarnings("unchecked")
//    public WordNum build() {
//      try {
//        WordNum record = new WordNum();
//        record.word = fieldSetFlags()[0] ? this.word : (java.lang.CharSequence) defaultValue(fields()[0]);
//        record.num = fieldSetFlags()[1] ? this.num : (java.lang.Integer) defaultValue(fields()[1]);
//        return record;
//      } catch (java.lang.Exception e) {
//        throw new org.apache.avro.AvroRuntimeException(e);
//      }
//    }
//  }
//
//  @SuppressWarnings("unchecked")
//  private static final org.apache.avro.io.DatumWriter<WordNum>
//    WRITER$ = (org.apache.avro.io.DatumWriter<WordNum>)MODEL$.createDatumWriter(SCHEMA$);
//
//  @Override public void writeExternal(java.io.ObjectOutput out)
//    throws java.io.IOException {
//    WRITER$.write(this, SpecificData.getEncoder(out));
//  }
//
//  @SuppressWarnings("unchecked")
//  private static final org.apache.avro.io.DatumReader<WordNum>
//    READER$ = (org.apache.avro.io.DatumReader<WordNum>)MODEL$.createDatumReader(SCHEMA$);
//
//  @Override public void readExternal(java.io.ObjectInput in)
//    throws java.io.IOException {
//    READER$.read(this, SpecificData.getDecoder(in));
//  }
//
//}
