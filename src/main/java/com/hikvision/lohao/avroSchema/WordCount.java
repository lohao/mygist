///**
// * Autogenerated by Avro
// *
// * DO NOT EDIT DIRECTLY
// */
//package com.hikvision.lohao.avroSchema;
//
//import org.apache.avro.specific.SpecificData;
//import org.apache.avro.message.BinaryMessageEncoder;
//import org.apache.avro.message.BinaryMessageDecoder;
//import org.apache.avro.message.SchemaStore;
//
//@SuppressWarnings("all")
//@org.apache.avro.specific.AvroGenerated
//public class WordCount extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
//  private static final long serialVersionUID = 3237292851195166659L;
//  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WordCount\",\"namespace\":\"com.hikvision.lohao.avroSchema\",\"fields\":[{\"name\":\"result\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"WordNum\",\"fields\":[{\"name\":\"word\",\"type\":\"string\"},{\"name\":\"num\",\"type\":\"int\"}]}}}]}");
//  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
//
//  private static SpecificData MODEL$ = new SpecificData();
//
//  private static final BinaryMessageEncoderer<WordCount> ENCODER =
//      new BinaryMessageEncoder<WordCount>(MODEL$, SCHEMA$);
//
//  private static final BinaryMessageDecoder<WordCount> DECODER =
//      new BinaryMessageDecoder<WordCount>(MODEL$, SCHEMA$);
//
//  /**
//   * Return the BinaryMessageDecoder instance used by this class.
//   */
//  public static BinaryMessageDecoder<WordCount> getDecoder() {
//    return DECODER;
//  }
//
//  /**
//   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
//   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
//   */
//  public static BinaryMessageDecoder<WordCount> createDecoder(SchemaStore resolver) {
//    return new BinaryMessageDecoder<WordCount>(MODEL$, SCHEMA$, resolver);
//  }
//
//  /** Serializes this WordCount to a ByteBuffer. */
//  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
//    return ENCODER.encode(this);
//  }
//
//  /** Deserializes a WordCount from a ByteBuffer. */
//  public static WordCount fromByteBuffer(
//      java.nio.ByteBuffer b) throws java.io.IOException {
//    return DECODER.decode(b);
//  }
//
//  @Deprecated public java.util.List<com.hikvision.lohao.avroSchema.WordNum> result;
//
//  /**
//   * Default constructor.  Note that this does not initialize fields
//   * to their default values from the schema.  If that is desired then
//   * one should use <code>newBuilder()</code>.
//   */
//  public WordCount() {}
//
//  /**
//   * All-args constructor.
//   * @param result The new value for result
//   */
//  public WordCount(java.util.List<com.hikvision.lohao.avroSchema.WordNum> result) {
//    this.result = result;
//  }
//
//  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
//  // Used by DatumWriter.  Applications should not call.
//  public java.lang.Object get(int field$) {
//    switch (field$) {
//    case 0: return result;
//    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
//    }
//  }
//
//  // Used by DatumReader.  Applications should not call.
//  @SuppressWarnings(value="unchecked")
//  public void put(int field$, java.lang.Object value$) {
//    switch (field$) {
//    case 0: result = (java.util.List<com.hikvision.lohao.avroSchema.WordNum>)value$; break;
//    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
//    }
//  }
//
//  /**
//   * Gets the value of the 'result' field.
//   * @return The value of the 'result' field.
//   */
//  public java.util.List<com.hikvision.lohao.avroSchema.WordNum> getResult() {
//    return result;
//  }
//
//  /**
//   * Sets the value of the 'result' field.
//   * @param value the value to set.
//   */
//  public void setResult(java.util.List<com.hikvision.lohao.avroSchema.WordNum> value) {
//    this.result = value;
//  }
//
//  /**
//   * Creates a new WordCount RecordBuilder.
//   * @return A new WordCount RecordBuilder
//   */
//  public static com.hikvision.lohao.avroSchema.WordCount.Builder newBuilder() {
//    return new com.hikvision.lohao.avroSchema.WordCount.Builder();
//  }
//
//  /**
//   * Creates a new WordCount RecordBuilder by copying an existing Builder.
//   * @param other The existing builder to copy.
//   * @return A new WordCount RecordBuilder
//   */
//  public static com.hikvision.lohao.avroSchema.WordCount.Builder newBuilder(com.hikvision.lohao.avroSchema.WordCount.Builder other) {
//    return new com.hikvision.lohao.avroSchema.WordCount.Builder(other);
//  }
//
//  /**
//   * Creates a new WordCount RecordBuilder by copying an existing WordCount instance.
//   * @param other The existing instance to copy.
//   * @return A new WordCount RecordBuilder
//   */
//  public static com.hikvision.lohao.avroSchema.WordCount.Builder newBuilder(com.hikvision.lohao.avroSchema.WordCount other) {
//    return new com.hikvision.lohao.avroSchema.WordCount.Builder(other);
//  }
//
//  /**
//   * RecordBuilder for WordCount instances.
//   */
//  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WordCount>
//    implements org.apache.avro.data.RecordBuilder<WordCount> {
//
//    private java.util.List<com.hikvision.lohao.avroSchema.WordNum> result;
//
//    /** Creates a new Builder */
//    private Builder() {
//      super(SCHEMA$);
//    }
//
//    /**
//     * Creates a Builder by copying an existing Builder.
//     * @param other The existing Builder to copy.
//     */
//    private Builder(com.hikvision.lohao.avroSchema.WordCount.Builder other) {
//      super(other);
//      if (isValidValue(fields()[0], other.result)) {
//        this.result = data().deepCopy(fields()[0].schema(), other.result);
//        fieldSetFlags()[0] = true;
//      }
//    }
//
//    /**
//     * Creates a Builder by copying an existing WordCount instance
//     * @param other The existing instance to copy.
//     */
//    private Builder(com.hikvision.lohao.avroSchema.WordCount other) {
//            super(SCHEMA$);
//      if (isValidValue(fields()[0], other.result)) {
//        this.result = data().deepCopy(fields()[0].schema(), other.result);
//        fieldSetFlags()[0] = true;
//      }
//    }
//
//    /**
//      * Gets the value of the 'result' field.
//      * @return The value.
//      */
//    public java.util.List<com.hikvision.lohao.avroSchema.WordNum> getResult() {
//      return result;
//    }
//
//    /**
//      * Sets the value of the 'result' field.
//      * @param value The value of 'result'.
//      * @return This builder.
//      */
//    public com.hikvision.lohao.avroSchema.WordCount.Builder setResult(java.util.List<com.hikvision.lohao.avroSchema.WordNum> value) {
//      validate(fields()[0], value);
//      this.result = value;
//      fieldSetFlags()[0] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'result' field has been set.
//      * @return True if the 'result' field has been set, false otherwise.
//      */
//    public boolean hasResult() {
//      return fieldSetFlags()[0];
//    }
//
//
//    /**
//      * Clears the value of the 'result' field.
//      * @return This builder.
//      */
//    public com.hikvision.lohao.avroSchema.WordCount.Builder clearResult() {
//      result = null;
//      fieldSetFlags()[0] = false;
//      return this;
//    }
//
//    @Override
//    @SuppressWarnings("unchecked")
//    public WordCount build() {
//      try {
//        WordCount record = new WordCount();
//        record.result = fieldSetFlags()[0] ? this.result : (java.util.List<com.hikvision.lohao.avroSchema.WordNum>) defaultValue(fields()[0]);
//        return record;
//      } catch (java.lang.Exception e) {
//        throw new org.apache.avro.AvroRuntimeException(e);
//      }
//    }
//  }
//
//  @SuppressWarnings("unchecked")
//  private static final org.apache.avro.io.DatumWriter<WordCount>
//    WRITER$ = (org.apache.avro.io.DatumWriter<WordCount>)MODEL$.createDatumWriter(SCHEMA$);
//
//  @Override public void writeExternal(java.io.ObjectOutput out)
//    throws java.io.IOException {
//    WRITER$.write(this, SpecificData.getEncoder(out));
//  }
//
//  @SuppressWarnings("unchecked")
//  private static final org.apache.avro.io.DatumReader<WordCount>
//    READER$ = (org.apache.avro.io.DatumReader<WordCount>)MODEL$.createDatumReader(SCHEMA$);
//
//  @Override public void readExternal(java.io.ObjectInput in)
//    throws java.io.IOException {
//    READER$.read(this, SpecificData.getDecoder(in));
//  }
//
//}
